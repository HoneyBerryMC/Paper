From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: partydev <admin@partyrealms.com>
Date: Sun, 24 Nov 2024 11:30:35 -0800
Subject: [PATCH] Add addItemExcludingArmorAndQuickbar Method


diff --git a/src/main/java/org/bukkit/inventory/Inventory.java b/src/main/java/org/bukkit/inventory/Inventory.java
index 0d519813c12d98b28d62e6d01d7ec6e8c2dba3c3..f91fa77d1331bfccec0be95508deaf73585bea6b 100644
--- a/src/main/java/org/bukkit/inventory/Inventory.java
+++ b/src/main/java/org/bukkit/inventory/Inventory.java
@@ -103,6 +103,35 @@ public interface Inventory extends Iterable<ItemStack> {
     @NotNull
     public HashMap<Integer, ItemStack> addItem(@NotNull ItemStack... items) throws IllegalArgumentException;
 
+    /**
+     * Stores the given ItemStacks in the inventory. This will try to fill
+     * existing stacks and empty slots as well as it can.
+     * <p>
+     * This will ignore armor and quickbar slots.
+     * <p>
+     * The returned HashMap contains what it couldn't store, where the key is
+     * the index of the parameter, and the value is the ItemStack at that
+     * index of the varargs parameter. If all items are stored, it will return
+     * an empty HashMap.
+     * <p>
+     * If you pass in ItemStacks which exceed the maximum stack size for the
+     * Material, first they will be added to partial stacks where
+     * Material.getMaxStackSize() is not exceeded, up to
+     * Material.getMaxStackSize(). When there are no partial stacks left
+     * stacks will be split on Inventory.getMaxStackSize() allowing you to
+     * exceed the maximum stack size for that material.
+     * <p>
+     * It is known that in some implementations this method will also set
+     * the inputted argument amount to the number of that item not placed in
+     * slots.
+     *
+     * @param items The ItemStacks to add
+     * @return A HashMap containing items that didn't fit.
+     * @throws IllegalArgumentException if items or any element in it is null
+     */
+    @NotNull
+    public HashMap<Integer, ItemStack> addItemExcludingArmorAndQuickbar(@NotNull ItemStack... items) throws IllegalArgumentException;
+
     /**
      * Removes the given ItemStacks from the storage contents of the inventory.
      * For removing ItemStacks from the inventories that have other content groups,
@@ -317,6 +346,13 @@ public interface Inventory extends Iterable<ItemStack> {
      */
     public int firstEmpty();
 
+    /**
+     * Returns the first empty Slot, excluding the armor and quickbar.
+     *
+     * @return The first empty Slot found, or -1 if no empty slots.
+     */
+    public int firstEmptyExcludingArmorAndQuickbar();
+
     /**
      * Check whether or not this inventory is empty. An inventory is considered
      * to be empty if there are no ItemStacks in any slot of this inventory.
